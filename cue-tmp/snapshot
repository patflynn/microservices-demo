// /usr/local/google/home/paflynn/hack/microservices-demo/cue-tmp
{
    deployment: {
        adservice:      {
            apiVersion: "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "adservice"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "adservice"
                        }
                    }
                    spec:                              {
                        terminationGracePeriodSeconds: 5
                        containers: [
                            {
                                name:  "server"
                                image: "adservice"
                                ports: [
                                    {
                                        containerPort: 9555
                                    }
                                ]
                                env: [
                                    {
                                        name:  "PORT"
                                        value: "9555"
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "200m"
                                        memory: "180Mi"
                                    }
                                    limits:     {
                                        cpu:    "300m"
                                        memory: "300Mi"
                                    }
                                }
                                readinessProbe:          {
                                    initialDelaySeconds: 20
                                    periodSeconds: 15
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:9555"
                                        ]
                                    }
                                }
                                livenessProbe:           {
                                    initialDelaySeconds: 20
                                    periodSeconds: 15
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:9555"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
        cartservice:    {
            apiVersion: "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "cartservice"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "cartservice"
                        }
                    }
                    spec:                              {
                        terminationGracePeriodSeconds: 5
                        containers: [
                            {
                                name:  "server"
                                image: "cartservice"
                                ports: [
                                    {
                                        containerPort: 7070
                                    }
                                ]
                                env: [
                                    {
                                        name:  "REDIS_ADDR"
                                        value: "redis-cart:6379"
                                    }
                                    {
                                        name:  "PORT"
                                        value: "7070"
                                    }
                                    {
                                        name:  "LISTEN_ADDR"
                                        value: "0.0.0.0"
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "200m"
                                        memory: "64Mi"
                                    }
                                    limits:     {
                                        cpu:    "300m"
                                        memory: "128Mi"
                                    }
                                }
                                readinessProbe:          {
                                    initialDelaySeconds: 15
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:7070"
                                        ]
                                    }
                                }
                                livenessProbe:           {
                                    initialDelaySeconds: 15
                                    periodSeconds: 10
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:7070"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
        checkoutservice: {
            apiVersion:  "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "checkoutservice"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "checkoutservice"
                        }
                    }
                    spec: {
                        containers: [
                            {
                                name:  "server"
                                image: "checkoutservice"
                                ports: [
                                    {
                                        containerPort: 5050
                                    }
                                ]
                                env: [
                                    {
                                        name:  "PRODUCT_CATALOG_SERVICE_ADDR"
                                        value: "productcatalogservice:3550"
                                    }
                                    {
                                        name:  "SHIPPING_SERVICE_ADDR"
                                        value: "shippingservice:50051"
                                    }
                                    {
                                        name:  "PAYMENT_SERVICE_ADDR"
                                        value: "paymentservice:50051"
                                    }
                                    {
                                        name:  "EMAIL_SERVICE_ADDR"
                                        value: "emailservice:5000"
                                    }
                                    {
                                        name:  "CURRENCY_SERVICE_ADDR"
                                        value: "currencyservice:7000"
                                    }
                                    {
                                        name:  "CART_SERVICE_ADDR"
                                        value: "cartservice:7070"
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "100m"
                                        memory: "64Mi"
                                    }
                                    limits:     {
                                        cpu:    "200m"
                                        memory: "128Mi"
                                    }
                                }
                                readinessProbe: {
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:5050"
                                        ]
                                    }
                                }
                                livenessProbe: {
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:5050"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
        currencyservice: {
            apiVersion:  "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "currencyservice"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "currencyservice"
                        }
                    }
                    spec:                              {
                        terminationGracePeriodSeconds: 5
                        containers: [
                            {
                                name:  "server"
                                image: "currencyservice"
                                ports: [
                                    {
                                        name: "grpc"
                                        containerPort: 7000
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "100m"
                                        memory: "64Mi"
                                    }
                                    limits:     {
                                        cpu:    "200m"
                                        memory: "128Mi"
                                    }
                                }
                                readinessProbe: {
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:7000"
                                        ]
                                    }
                                }
                                livenessProbe: {
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:7000"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
        emailservice:   {
            apiVersion: "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "emailservice"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "emailservice"
                        }
                    }
                    spec:                              {
                        terminationGracePeriodSeconds: 5
                        containers: [
                            {
                                name:  "server"
                                image: "emailservice"
                                ports: [
                                    {
                                        containerPort: 8080
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "100m"
                                        memory: "64Mi"
                                    }
                                    limits:     {
                                        cpu:    "200m"
                                        memory: "128Mi"
                                    }
                                }
                                readinessProbe:    {
                                    periodSeconds: 5
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:8080"
                                        ]
                                    }
                                }
                                livenessProbe:     {
                                    periodSeconds: 5
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:8080"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
        frontend:       {
            apiVersion: "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "frontend"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "frontend"
                        }
                    }
                    spec: {
                        containers: [
                            {
                                name:  "server"
                                image: "frontend"
                                ports: [
                                    {
                                        containerPort: 8080
                                    }
                                ]
                                env: [
                                    {
                                        name:  "PRODUCT_CATALOG_SERVICE_ADDR"
                                        value: "productcatalogservice:3550"
                                    }
                                    {
                                        name:  "CURRENCY_SERVICE_ADDR"
                                        value: "currencyservice:7000"
                                    }
                                    {
                                        name:  "CART_SERVICE_ADDR"
                                        value: "cartservice:7070"
                                    }
                                    {
                                        name:  "RECOMMENDATION_SERVICE_ADDR"
                                        value: "recommendationservice:8080"
                                    }
                                    {
                                        name:  "SHIPPING_SERVICE_ADDR"
                                        value: "shippingservice:50051"
                                    }
                                    {
                                        name:  "CHECKOUT_SERVICE_ADDR"
                                        value: "checkoutservice:5050"
                                    }
                                    {
                                        name:  "AD_SERVICE_ADDR"
                                        value: "adservice:9555"
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "100m"
                                        memory: "64Mi"
                                    }
                                    limits:     {
                                        cpu:    "200m"
                                        memory: "128Mi"
                                    }
                                }
                                readinessProbe:          {
                                    initialDelaySeconds: 10
                                    httpGet:  {
                                        port: 8080
                                        path: "/_healthz"
                                        httpHeaders: [
                                            {
                                                name:  "Cookie"
                                                value: "shop_session-id=x-readiness-probe"
                                            }
                                        ]
                                    }
                                }
                                livenessProbe:           {
                                    initialDelaySeconds: 10
                                    httpGet:  {
                                        port: 8080
                                        path: "/_healthz"
                                        httpHeaders: [
                                            {
                                                name:  "Cookie"
                                                value: "shop_session-id=x-liveness-probe"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
        loadgenerator:  {
            apiVersion: "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "loadgenerator"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "loadgenerator"
                        }
                    }
                    spec:                              {
                        terminationGracePeriodSeconds: 5
                        containers: [
                            {
                                name:  "main"
                                image: "loadgenerator"
                                env: [
                                    {
                                        name:  "FRONTEND_ADDR"
                                        value: "frontend:80"
                                    }
                                    {
                                        name:  "USERS"
                                        value: "10"
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "300m"
                                        memory: "256Mi"
                                    }
                                    limits:     {
                                        cpu:    "500m"
                                        memory: "512Mi"
                                    }
                                }
                            }
                        ]
                        restartPolicy: "Always"
                        initContainers: [
                            {
                                name:  "wait-frontend"
                                image: "alpine:3.6"
                                env: [
                                    {
                                        name:  "FRONTEND_ADDR"
                                        value: "frontend:80"
                                    }
                                ]
                                command: [
                                    "sh"
                                    "-c"
                                    "set -x;  apk add --no-cache curl; until timeout -t 2 curl -f \"http://${FRONTEND_ADDR}\"; do echo \"waiting for http://${FRONTEND_ADDR}\"; sleep 2; done;"
                                ]
                            }
                        ]
                    }
                }
                replicas: 1
            }
        }
        paymentservice: {
            apiVersion: "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "paymentservice"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "paymentservice"
                        }
                    }
                    spec:                              {
                        terminationGracePeriodSeconds: 5
                        containers: [
                            {
                                name:  "server"
                                image: "paymentservice"
                                ports: [
                                    {
                                        containerPort: 50051
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "100m"
                                        memory: "64Mi"
                                    }
                                    limits:     {
                                        cpu:    "200m"
                                        memory: "128Mi"
                                    }
                                }
                                readinessProbe: {
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:50051"
                                        ]
                                    }
                                }
                                livenessProbe: {
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:50051"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
        productcatalogservice: {
            apiVersion:        "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "productcatalogservice"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "productcatalogservice"
                        }
                    }
                    spec:                              {
                        terminationGracePeriodSeconds: 5
                        containers: [
                            {
                                name:  "server"
                                image: "productcatalogservice"
                                ports: [
                                    {
                                        containerPort: 3550
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "100m"
                                        memory: "64Mi"
                                    }
                                    limits:     {
                                        cpu:    "200m"
                                        memory: "128Mi"
                                    }
                                }
                                readinessProbe: {
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:3550"
                                        ]
                                    }
                                }
                                livenessProbe: {
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:3550"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
        recommendationservice: {
            apiVersion:        "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "recommendationservice"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "recommendationservice"
                        }
                    }
                    spec:                              {
                        terminationGracePeriodSeconds: 5
                        containers: [
                            {
                                name:  "server"
                                image: "recommendationservice"
                                ports: [
                                    {
                                        containerPort: 8080
                                    }
                                ]
                                env: [
                                    {
                                        name:  "PRODUCT_CATALOG_SERVICE_ADDR"
                                        value: "productcatalogservice:3550"
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "100m"
                                        memory: "220Mi"
                                    }
                                    limits:     {
                                        cpu:    "200m"
                                        memory: "450Mi"
                                    }
                                }
                                readinessProbe:    {
                                    periodSeconds: 5
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:8080"
                                        ]
                                    }
                                }
                                livenessProbe:     {
                                    periodSeconds: 5
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:8080"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
        redis-cart:     {
            apiVersion: "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "redis-cart"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "redis-cart"
                        }
                    }
                    spec: {
                        containers: [
                            {
                                name:  "redis"
                                image: "redis:alpine"
                                ports: [
                                    {
                                        containerPort: 6379
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "70m"
                                        memory: "200Mi"
                                    }
                                    limits:     {
                                        cpu:    "125m"
                                        memory: "256Mi"
                                    }
                                }
                                readinessProbe:    {
                                    periodSeconds: 5
                                    tcpSocket: {
                                        port:  6379
                                    }
                                }
                                livenessProbe:     {
                                    periodSeconds: 5
                                    tcpSocket: {
                                        port:  6379
                                    }
                                }
                                volumeMounts: [
                                    {
                                        name:      "redis-data"
                                        mountPath: "/data"
                                    }
                                ]
                            }
                        ]
                        volumes: [
                            {
                                name: "redis-data"
                                emptyDir: {
                                }
                            }
                        ]
                    }
                }
            }
        }
        shippingservice: {
            apiVersion:  "extensions/v1beta1"
            kind: "Deployment"
            metadata: {
                name: "shippingservice"
            }
            spec: {
                template: {
                    metadata: {
                        labels:  {
                            app: "shippingservice"
                        }
                    }
                    spec: {
                        containers: [
                            {
                                name:  "server"
                                image: "shippingservice"
                                ports: [
                                    {
                                        containerPort: 50051
                                    }
                                ]
                                resources: {
                                    requests:   {
                                        cpu:    "100m"
                                        memory: "64Mi"
                                    }
                                    limits:     {
                                        cpu:    "200m"
                                        memory: "128Mi"
                                    }
                                }
                                readinessProbe:    {
                                    periodSeconds: 5
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:50051"
                                        ]
                                    }
                                }
                                livenessProbe: {
                                    exec: {
                                        command: [
                                            "/bin/grpc_health_probe"
                                            "-addr=:50051"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    }
    service: {
        adservice:      {
            apiVersion: "v1"
            kind: "Service"
            metadata: {
                name: "adservice"
            }
            spec: {
                ports: [
                    {
                        name: "grpc"
                        port: 9555
                        targetPort: 9555
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "adservice"
                }
            }
        }
        cartservice:    {
            apiVersion: "v1"
            kind: "Service"
            metadata: {
                name: "cartservice"
            }
            spec: {
                ports: [
                    {
                        name: "grpc"
                        port: 7070
                        targetPort: 7070
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "cartservice"
                }
            }
        }
        checkoutservice: {
            apiVersion:  "v1"
            kind: "Service"
            metadata: {
                name: "checkoutservice"
            }
            spec: {
                ports: [
                    {
                        name: "grpc"
                        port: 5050
                        targetPort: 5050
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "checkoutservice"
                }
            }
        }
        currencyservice: {
            apiVersion:  "v1"
            kind: "Service"
            metadata: {
                name: "currencyservice"
            }
            spec: {
                ports: [
                    {
                        name: "grpc"
                        port: 7000
                        targetPort: 7000
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "currencyservice"
                }
            }
        }
        emailservice:   {
            apiVersion: "v1"
            kind: "Service"
            metadata: {
                name: "emailservice"
            }
            spec: {
                ports: [
                    {
                        name: "grpc"
                        port: 5000
                        targetPort: 8080
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "emailservice"
                }
            }
        }
        frontend:       {
            apiVersion: "v1"
            kind: "Service"
            metadata: {
                name: "frontend"
            }
            spec: {
                ports: [
                    {
                        name: "http"
                        port: 80
                        targetPort: 8080
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "frontend"
                }
            }
        }
        frontend-external: {
            apiVersion:    "v1"
            kind: "Service"
            metadata: {
                name: "frontend-external"
            }
            spec: {
                ports: [
                    {
                        name: "http"
                        port: 80
                        targetPort: 8080
                    }
                ]
                type: "LoadBalancer"
                selector: {
                    app:  "frontend"
                }
            }
        }
        paymentservice: {
            apiVersion: "v1"
            kind: "Service"
            metadata: {
                name: "paymentservice"
            }
            spec: {
                ports: [
                    {
                        name: "grpc"
                        port: 50051
                        targetPort: 50051
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "paymentservice"
                }
            }
        }
        productcatalogservice: {
            apiVersion:        "v1"
            kind: "Service"
            metadata: {
                name: "productcatalogservice"
            }
            spec: {
                ports: [
                    {
                        name: "grpc"
                        port: 3550
                        targetPort: 3550
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "productcatalogservice"
                }
            }
        }
        recommendationservice: {
            apiVersion:        "v1"
            kind: "Service"
            metadata: {
                name: "recommendationservice"
            }
            spec: {
                ports: [
                    {
                        name: "grpc"
                        port: 8080
                        targetPort: 8080
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "recommendationservice"
                }
            }
        }
        redis-cart:     {
            apiVersion: "v1"
            kind: "Service"
            metadata: {
                name: "redis-cart"
            }
            spec: {
                ports: [
                    {
                        name: "redis"
                        port: 6379
                        targetPort: 6379
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "redis-cart"
                }
            }
        }
        shippingservice: {
            apiVersion:  "v1"
            kind: "Service"
            metadata: {
                name: "shippingservice"
            }
            spec: {
                ports: [
                    {
                        name: "grpc"
                        port: 50051
                        targetPort: 50051
                    }
                ]
                type: "ClusterIP"
                selector: {
                    app:  "shippingservice"
                }
            }
        }
    }
}
